<?xml version="1.0"?>
<!--|
Authors: Jesse Dolfin <j.r.dolfin@student.tudelft.nl>
    Free for all, no warranties whatsoever.
|-->

<launch>
    <!-- Select the robot -->
    <arg name="robot_name"/>
    <arg name="model"/>
    <arg name="controller"/>
    <arg name="simulation" default="true"/>
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>

    <!-- Define hardware interface based on the selected controller -->
    <arg if="$(eval controller == 'PositionController' or controller == 'PositionTrajectoryController')"
        name="hardware_interface" value="PositionJointInterface"/>
    <arg unless="$(eval controller == 'PositionController' or controller == 'PositionTrajectoryController')"
        name="hardware_interface" value="EffortJointInterface"/>

    <!-- Set up variables related to the namespaces -->
    <include file="$(find cor_tud_controllers)/launch/namespace.launch">
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="model" value="$(arg model)"/>
    </include>
    
    <!-- Load URDF models -->
    <param
        name="/$(arg robot_name)$(arg model)_description"
        command="$(find xacro)/xacro 
        '$(find cor_tud_controllers)/urdf/$(arg robot_name)$(arg model).urdf.xacro'
        hardware_interface:=$(arg hardware_interface)
        robot_name:=$(arg robot_name)
        model:=$(arg model)"
    />

    <!-- Launch FRI drivers -->
    <include
        unless="$(arg simulation)"
        file="$(find cor_tud_controllers)/launch/drivers.launch">
        <arg name="model" value="$(arg model)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
    </include>

    <!-- Launch Gazebo drivers and friends -->
    <include
        if="$(arg simulation)"
        file="$(find cor_tud_controllers)/launch/gazebo_drivers.launch">
        <arg name="model" value="$(arg model)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
    </include>

    <!-- Load joint controller config from YAML to param server -->
    <rosparam file="$(find iiwa_impedance_control)/config/iiwa_impedance_control.yaml" 
            command="load" ns="$(arg robot_name)$(arg model)"/>
            
    <!-- Spawn controller -->
    <include file="$(find iiwa_impedance_control)/launch/iiwa_impedance_control.launch">
        <arg name="controller" value="$(arg controller)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="model" value="$(arg model)"/>
    </include>
</launch>
