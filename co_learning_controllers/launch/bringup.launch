<?xml version="1.0"?>
<!--|
Authors: Jesse Dolfin <j.r.dolfin@student.tudelft.nl>
    Free for all, no warranties whatsoever.
|-->
<launch>
    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${node}] [${time}]: ${message}"/>

    <!-- Arguments to modify simulation parameters -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" default="$(find iiwa_gazebo)/world/iiwa.world"/> 
    <arg name="simulation" default="true"/>
    <arg name="gzclient" default="false"/>

    <!-- Arguments to control node launching -->
    <arg name="allow_nodes" default="true"/>
    <arg name="control_node" default="true"/>
    <arg name="secondary_task" default="true"/>
    <arg name="rviz" default="false"/>
    <arg name="detection" default="true"/>
    <arg name="qb_hand" default="true"/>

     <!-- Arguments to modify experiment behaviour -->
    <arg name="personality_type" default="fake"/>
    <arg name="participant_number" default="-1"/>
    <arg name="fake" default="false"/>
    <arg name="num_test_runs" default="20"/>

    <!-- Set these as parameters on the parameter server -->
    <param name="personality_type" value="$(arg personality_type)"/>
    <param name="participant_number" value="$(arg participant_number)"/>
    <param name="fake" value="$(arg fake)"/>
    <param name="num_test_runs" value="$(arg num_test_runs)"/>

    <!-- Select the robot -->
    <arg name="robot_name" default="iiwa"/>
    <arg name="model" default="7"/>

    <!-- Select the controller -->
    <arg name="controller" default="CartesianImpedanceController"/>

    <group if="$(arg simulation)"> 
        <!-- Loads the Gazebo world -->
        <include unless="$(arg gzclient)"
            file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="gui" value="$(arg gui)" />
            <arg name="headless" value="$(arg headless)"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="world_name" value="$(arg world_name)"/> 
        </include>
    </group>

    <!--If we are not in simulation mode, start the FRI driver-->
    <include file="$(find co_learning_controllers)/launch/driver_bringup.launch">
        <arg name="simulation" value="$(arg simulation)"/>
        <arg name="model" value="$(arg model)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="controller" value="$(arg controller)"/>
    </include>


            

    
    <!-- IF allow_nodes:=false, launch just the barebone interface -->
    <group if="$(arg allow_nodes)">
        <group if="$(arg control_node)">
            

            <node name="control_node"
                pkg="co_learning_controllers"
                type="control_node.py"
                output="screen"
                />
        </group>

        <!-- Conditionally Launch secondary_task.py in a new terminal window -->
        <group if="$(arg secondary_task)">
            <node name="secondary_task" pkg="co_learning_secondary_task" type="secondary_task.py" output="log"/>
        </group>

        <group if="$(eval arg('detection') == 'true' and arg('fake') == 'false')">
            <node name="detection" pkg="co_learning_detection" type="detection.py" output="log"/>
        </group>
    
        <group if="$(arg rviz)">
            <arg name="rviz_config" default="/home/jesse/Thesis/co_learning_robot_personalities/rviz_configs/camera_view.rviz"/>
            <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" output="screen"/>
        </group>

        <group if="$(eval arg('qb_hand') == 'true' and arg('fake') == 'false')">
            <include file="$(find qb_hand_control)/launch/control_qbhand.launch">
                <arg name="activate_on_initialization" value="true"/>
                <arg name="standalone" value="true"/>
            </include>
        </group>
    </group>

</launch>
