<?xml version="1.0"?>
<!--|
Authors: Jesse Dolfin <j.r.dolfin@student.tudelft.nl>
    Free for all, no warranties whatsoever.
|-->
<launch>
    <!-- These are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" default="$(find iiwa_gazebo)/world/iiwa.world"/> 
    <arg name="simulation" default="true"/>
    <arg name="gzclient" default="false"/>
    <arg name="schunk_hand" default="false"/>
    <arg name="device_type" default="d455"/>
    <arg name="filters" default=""/>
    <arg name="output" default="log"/> 

    <!-- Arguments to control node launching -->
    <arg name="control_node" default="true"/>
    <arg name="secondary_task" default="true"/>
    <arg name="rviz" default="false"/>
    <arg name="detection" default="true"/>
    <arg name="qb_hand" default="true"/>

    <!-- Select the robot -->
    <arg name="robot_name" default="iiwa"/>
    <arg name="model" default="7"/>

    <!-- Select the controller -->
    <arg name="controller" default="CartesianImpedanceController"/>
    <arg name="controller_server" default="true"/>

    <!--If we are not in simulation mode, start the FRI driver-->
    <!--This bringup sets up iiwa, FRI if not on simulation, and the controller -->
    <include file="$(find cor_tud_controllers)/launch/bringup.launch">
        <arg name="simulation" value="$(arg simulation)"/>
        <arg name="model" value="$(arg model)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="controller" value="$(arg controller)"/>
        <arg name="controller_server" value="$(arg controller_server)"/>
    </include>

    <!-- If we are in the simulation mode, loads Gazebo-->
    <group if="$(arg simulation)"> 
        <!-- Loads the Gazebo world -->
        <include unless="$(arg gzclient)"
            file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="gui" value="$(arg gui)" />
            <arg name="headless" value="$(arg headless)"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="world_name" value="$(arg world_name)"/> 
        </include>
    </group>

    <!-- Conditionally Launch ControlNode.py in a new terminal window -->
    <group if="$(arg control_node)">
        <node name="control_node" pkg="co_learning_controllers" type="control_node.py" output="screen" launch-prefix="xterm -e"/>
    </group>

    <!-- Conditionally Launch secondary_task.py in a new terminal window -->
    <group if="$(arg secondary_task)">
        <node name="secondary_task" pkg="co_learning_secondary_task" type="secondary_task.py" output="log"/>
    </group>

    <group if="$(arg detection)">
        <node name="detection" pkg="co_learning_detection" type="detection.py" output="log"/>
    </group>
   
    <group if="$(arg rviz)">
        <arg name="rviz_config" default="/home/jesse/Thesis/co_learning_robot_personalities/rviz_configs/camera_view.rviz"/>
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" output="screen"/>
    </group>

    <group if="$(arg qb_hand)">
        <include file="$(find qb_hand_control)/launch/control_qbhand.launch">
            <arg name="activate_on_initialization" value="true"/>
            <arg name="standalone" value="true"/>
        </include>
    </group>
</launch>
